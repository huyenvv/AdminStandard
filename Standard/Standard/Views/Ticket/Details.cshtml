@model Ticket
@using WebLib.DAL
@using Standard.Controllers
@{
    var currentUser = fwUserDAL.GetCurrentUser();
    var createby = new fwUserDAL().GetByID(Model.CreatedBy);
    var listTickKet = Model.TicketDetails;
    var dept = DB.Entities.Dept.FirstOrDefault(m => m.ID == Model.DeptID);
    var currentRequest = Request.QueryString["returnUrl"];
    var returnUrl = !string.IsNullOrEmpty(currentRequest) ? currentRequest : Url.Action("Index");
    ViewBag.Title = "ĐỀ NGHỊ DỤNG CỤ LÀM VIỆC/ REQUEST FOR WORKING FACILITIES";
    var listFiles = !string.IsNullOrEmpty(Model.FilePath) ? Model.FilePath.Split(new string[] { ";#" }, StringSplitOptions.RemoveEmptyEntries) : new string[0];

    string ykien = null;
    if (Model.FeedbackID != null)
    { ykien = DB.Entities.Feedback.FirstOrDefault(m => m.ID == Model.FeedbackID.Value).Title; }

    var listTicketType = DB.Entities.TicketType.ToList();

    int doKhan;
    try
    {
        doKhan = int.Parse(Model.DoKhan);
    }
    catch (Exception)
    {
        doKhan = 0;
    }
}
<link href="~/Content/css/ticket.css" rel="stylesheet" />
@section  scripts{
    <script src="~/Content/js/ticket.js"></script>
}
<style>

</style>

@using (Html.BeginForm(null, null, new { returnUrl = returnUrl }, FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.Hidden("isSend", true)
    @Html.HiddenFor(m => m.ID)

    @Html.ValidationSummary(true)
    <div class="row">
        <div class="col-sm-12 process-circle">
            @for (int i = 0; i < TicketStatus.TicketStatusTitle.Length; i++)
            {
                if (Model.Status == i)
                {
                    <button class="btn bgm-amber waves-effect" onclick="return false;">@TicketStatus.TicketStatusTitle[i]</button>
                }
                else
                {
                    <button class="btn bgm-gray waves-effect" disabled="disabled">@TicketStatus.TicketStatusTitle[i]</button>
                }
                if (i != TicketStatus.TicketStatusTitle.Length - 1)
                {
                    <button class="btn btn-default btn-xs btn-icon waves-effect waves-circle waves-float" disabled="disabled"><i class="md md-arrow-forward"></i></button>
                }
            }
        </div>
    </div>
    <hr />
    <div class="row">
        <div class="col-sm-12">
            @if (TicketController.CanGuiYeuCau(Model))
            {
                <button type="button" onclick="location.href='@Url.Action("GuiYeuCau", new { id = Model.ID })'" class="btn btn-primary waves-effect"><i class="md md-check"></i> Gửi yêu cầu</button>
            }
            @if (TicketController.CanThongQua(Model))
            {
                <button type="button" onclick="location.href='@Url.Action("ThongQua", new { id = Model.ID })'" class="btn btn-primary waves-effect"><i class="md md-check"></i> Thông qua</button>
            }
            @if (TicketController.CanKiemDuyet(Model))
            {
                <button type="button" onclick="location.href='@Url.Action("KiemDuyet", new { id = Model.ID })'" class="btn btn-primary waves-effect"><i class="md md-check"></i> Đồng ý kiểm duyệt</button>
            }
            @if (TicketController.CanDuyet(Model))
            {
                <button type="button" onclick="location.href='@Url.Action("Duyet", new { id = Model.ID })'" class="btn btn-primary waves-effect"><i class="md md-check"></i> Phê duyệt</button>
            }
            @if (TicketController.CanTaoCheckout(Model))
            {
                <a href="@Url.Action("TaoCheckout", new { ticketID = Model.ID })" class=" btn btn-primary waves-effect"><i class="md md-check"></i> Tạo phiếu yêu cầu thanh toán</a>
            }
            <button type="button" onclick="window.history.back();" class="btn btn-default waves-effect">Quay lại</button>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <div class="form-group fg-float">
                <div class="fg-line">
                    <label>Độ khẩn: </label>
                    <input type="text" name="DoKhan" value="@DoKhan.Title[doKhan]" class="form-control" readonly />
                </div>
            </div>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12">
            @foreach (var item in listTicketType)
            {
                <label class="checkbox checkbox-inline m-r-20">
                    <input type="checkbox" class="onCheckbox" name="Type" value="@item.ID" @(item.ID == Model.Type ? "checked" : "") disabled />
                    <i class="input-helper"></i>
                    @item.Title
                </label>
            }
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-4">
            <span>Ngày đề nghị: </span><h4 class="color-blue">@Model.Created.ToString("dd/MM/yyyy")</h4>
        </div>
        <div class="col-sm-4">
            <span>Người đề nghị: </span><h4 class="color-blue">@createby.Name</h4>
        </div>
        <div class="col-sm-4">
            <span>Bộ phận: </span><h4 class="color-blue">@dept.Title</h4>
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th class="text-center" width="10">
                            TT<br />
                            @*<i>No</i>*@
                        </th>
                        <th>
                            Diễn giải <br />
                            @*<i>Description</i>*@
                        </th>
                        <th width="10">
                            SL<br />
                            @*<i>Q'tty</i>*@
                        </th>
                        <th>
                            Mục đích, lý do<br />
                            @*<i>Perpose, Reason</i>*@
                        </th>
                        <th>
                            Ngày cần<br />
                            @*<i>Date require</i>*@
                        </th>

                    </tr>
                </thead>
                <tbody>
                    @if (listTickKet != null && listTickKet.Count > 0)
                    {
                        var dem = 1;
                        foreach (var item in listTickKet)
                        {
                            <tr>
                                <td class="text-center">
                                    @(dem++)
                                </td>
                                <td>
                                    @item.Title
                                </td>
                                <td>
                                    @item.Quantity
                                </td>
                                <td>
                                    @item.Reason
                                </td>
                                <td>
                                    @item.DateRequire.ToString("dd/MM/yyyy")
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
            <br />
        </div>
    </div>
    <br />
    <div class="row">
        <div class="col-sm-12">
            <div id="ListFile">
                @if (listFiles.Length > 0)
                {
                    <label>Danh sách tệp tin: </label>
                    <div class="clearfix"></div>
                    foreach (var item in listFiles)
                    {
                        var itemFileName = item.Split(new char[] { '/' }, StringSplitOptions.RemoveEmptyEntries);
                        <a href="#" onclick="showFile('@item')">@itemFileName[itemFileName.Length - 1]</a><br />
                    }
                }
            </div>
        </div>
    </div>
}
@if (ykien != null)
{   <br />
    <div class="row">
        <div class="col-sm-12">
            <div class="form-group fg-float">
                <div class="fg-line">
                    <label>
                        Ý kiến phản hồi
                    </label>
                    <textarea class="form-control fg-input input-lg" rows="3">@ykien</textarea>
                </div>

            </div>
        </div>
    </div>
}
@if (Model.Status != TicketStatus.KhoiTao && Model.Status != TicketStatus.DaDuyet && Model.Current == DB.CurrentUser.ID)
{
    using (Html.BeginForm("PhanHoi", "Ticket", FormMethod.Post))
    {
        @Html.Hidden("id", Model.ID)
        <div class="row">
            <div class="col-sm-12">
                <div class="form-group fg-float">
                    <div class="fg-line">
                        <label>
                            Ý kiến phản hồi
                        </label>
                        <textarea class="form-control fg-input input-lg" id="txtPhanHoi" rows="3" name="ykien"></textarea>
                    </div>

                </div>
            </div>
            <div class="col-sm-12">
                <div id="messerror" class="hide field-validation-error">Bạn cần nhập ý kiến phản hồi!</div>
            </div>
            <div class="clearfix"></div>
            <div class="col-sm-6">
                <button type="submit" class="btn btn-primary btn-icon-text waves-effect"><i class="md md-arrow-back"></i>  Phản hồi</button>
            </div>
        </div>
    }
}

